name: Deploy to Amazon ECS
on:
  push:
    branches: [ "main" ]

env:
    AWS_REGION: us-west-2                                                  
    ECS_SERVICE: ecs-devops-sandbox-service                         
    ECS_CLUSTER: ecs-devops-sandbox-cluster
    CONTAINER_NAME: ecs-devops-sandbox                          
    ECS_TASK_DEFINITION: task-definition.json   
    DOCKERHUB_REPOSITORY: test_new              

permissions:
    id-token: write
    contents: read

jobs:
  deploy:
      name: Deploy
      runs-on: ubuntu-latest
      permissions:
        id-token: write
        contents: read

      steps: 
      - name: Check commit status
        id: commit-status
        run: |
          # Check the status of the Git commit
          
          CURRENT_STATUS=$(curl --url "https://api.github.com/repos/${{ github.repository }}/commits/${{ github.sha }}/status" --header "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" | jq -r '.state');
          echo "Current status is: $CURRENT_STATUS"
          while [ "${CURRENT_STATUS^^}" = "PENDING" ]; 
            do sleep 10; 
            CURRENT_STATUS=$(curl --url "https://api.github.com/repos/${{ github.repository }}/commits/${{ github.sha }}/status" --header "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" | jq -r '.state');
          done;
          echo "Current status is: $CURRENT_STATUS"
          if [ "${CURRENT_STATUS^^}" = "FAILURE" ]; 
            then echo "Commit status failed. Canceling execution"; 
            exit 1; 
          fi 
        
      - name: Checkout
        uses: actions/checkout@v3
  
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::022608205880:role/my-github-actions-role-test
      
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with: 
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }} 
  
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with: 
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPOSITORY}}:latest 
  
      - name: Build and push Docker image
        id: build-image-docker
        uses: docker/build-push-action@v2
        env: 
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKERHUB_REPOSITORY: ${{ env.DOCKERHUB_REPOSITORY }}  
          IMAGE_TAG: ${{ github.sha }}   
        with:
          context: .
          file: ./Dockerfile
          push: true   
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}   
      
      - name: Update ECS task definition
        uses: aws-actions/amazon-ecs-update-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ecs-devops-sandbox   
          image: ${{ steps.build-image-docker.outputs.image }}   

      
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:   
          task-definition: ${{ steps.task_def.outputs.task_definition }}   
          service: ecs-devops-sandbox-service
          cluster: ecs-devops-sandbox-cluster
          wait-for-service-stability: true
